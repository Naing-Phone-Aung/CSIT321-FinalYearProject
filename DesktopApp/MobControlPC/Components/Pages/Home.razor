@page "/"
@implements IDisposable
@using MobControlPC.Services
@using System.Net.NetworkInformation
@using MobControlPC.Components

@inject ServerService Server

@if (Server != null)
{
    <div class="page-container">
        <header>
            <img class="logo-img" src="image/mobcontrollogo.svg" alt="App Logo" />
            <h1>Mob Controller Receiver</h1>
        </header>

        <main>
            <div class="left-column">
                <section class="info-section">
                    <h2>Local Connection</h2>
                    <div class="network-card">
                        <i class="icon fa-solid fa-wifi"></i>
                        <div class="details">
                            <span class="ssid">@_wifiSsid</span>
                            <span class="device-name">Device name : @Server.DeviceName</span>
                        </div>
                    </div>
                </section>

                <section class="info-section">
                    <h2>Connected Device</h2>
                    @if (Server.IsAnyClientConnected)
                    {
                        @foreach (var client in Server.ConnectedClients.Where(c => c.IsVerified))
                        {
                            <div class="network-card connected">
                                <i class="icon fa-solid fa-mobile-screen-button"></i>
                                <div class="details">
                                    <span class="ssid">@client.Name</span>
                                    <span class="device-name">Connected, secured</span>
                                </div>
                                <div class="actions">
                                    <button @onclick="() => Server.DisconnectClient(client.Id)">Disconnect</button>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                         <div class="network-card placeholder">
                            <span>Waiting for connection...</span>
                        </div>
                    }
                </section>
            </div>

            <div class="right-column">
                <section class="content-card qr-section">
                    <h2>Scan QR</h2>
                    <p>Open Mob-Controller on your phone and scan the QR code to connect.</p>
                    @if (Server.QrCodeImage != null)
                    {
                        <img class="qr-code" src="@Server.QrCodeImage" alt="QR Code" />
                    }
                </section>

                <OtpDisplay />
            </div>
        </main>
    </div>
}

@code {
    private string _wifiSsid = "Detecting...";

    protected override void OnInitialized()
    {
        if (Server != null) {
            _wifiSsid = GetWifiSsid(); 
            Server.PropertyChanged += OnServerPropertyChanged;
            Server.Start();
        }
    }

    private async void OnServerPropertyChanged(object? sender, System.ComponentModel.PropertyChangedEventArgs e) => await InvokeAsync(StateHasChanged);
    
    private string GetWifiSsid() {
        try {
            var wifiInterface = NetworkInterface.GetAllNetworkInterfaces().FirstOrDefault(i => i.NetworkInterfaceType == NetworkInterfaceType.Wireless80211 && i.OperationalStatus == OperationalStatus.Up);
            return wifiInterface?.Name ?? "Wi-Fi not found";
        } catch { return "Permission error"; }
    }

    public void Dispose() { if (Server != null) Server.PropertyChanged -= OnServerPropertyChanged; }
}